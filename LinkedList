                                                                                      Basic structure

public class LinkedList {
    public static class Node {
        int data;
        Node next;

        // Constructor
        public Node(int data) {
            this.data = data;
            this.next = null;
        }
    }

    // head and tail are directly accessible as all information is in single class
    // it linkedlist class
    public static Node head;
    public static Node tail;


    public static void main(String args[]) {
        LinkedList ll = new LinkedList();
        ll.addFirst(1);
        ll.addFirst(2);
    }
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

                                                                                                    Add First

public class LinkedList {
    public static class Node {
        int data;
        Node next;

        // Constructor
        public Node(int data) {
            this.data = data;
            this.next = null;
        }
    }

    // head and tail are directly accessible as all information is in single class
    // it linkedlist class
    public static Node head;
    public static Node tail;

    // Methods- we will call not directly from main, call using ll object, it can be
    // static or non static

    public void addFirst(int data) {

        // step-1 create new node
        Node newNode = new Node(data);

        // when linkedlist is empty
        if (head == null) {
            head = tail = newNode;
            return;
        }

        // when linkedList have 1 or more node

        // step2 - newNode next =head
        newNode.next = head; // link

        // step3 - head=newNode
        head = newNode;
    }

    public static void main(String args[]) {
        LinkedList ll = new LinkedList();
        ll.addFirst(1);
        ll.addFirst(2);
    }
}


------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                                                                                        Add last

public class LinkedList {
    public static class Node {
        int data;
        Node next;

        // Constructor
        public Node(int data) {
            this.data = data;
            this.next = null;
        }
    }

    public static Node head;
    public static Node tail;

    public void addLast(int data) {
        // create new node
        Node newNode = new Node(data);

        // special case-empty ll
        if (head == null) { // tail==null is also correct but by convention when head is null then we
                            // consider ll is empty

            head = tail = newNode;
            return;
        }

        tail.next = newNode;
        tail = newNode;
    }

    public static void main(String args[]) {
        LinkedList ll = new LinkedList();
        ll.addLast(3);
        ll.addLast(4);

    }
}


------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------



