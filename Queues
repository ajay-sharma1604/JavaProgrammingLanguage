                                                                                  Queues using array
public class QueueB {
    static class Queue {
        static int arr[];
        static int size;
        static int rear;

        // constructor
        Queue(int n) { // n-arraysize
            arr = new int[n];
            size = n;
            rear = -1;
        }

        public static boolean isEmpty() {
            return rear == -1;
        }

        // add
        public static void add(int data) {
            // check queue -full
            if (rear == size - 1) { // rear reached last index
                System.out.println("queue is full");
                return;
            }

            rear = rear + 1; // add data
            arr[rear] = data;// initialize with data

        }

        // remove
        public static int remove() { // remove and return
            if (isEmpty()) {
                System.out.println("empty queue");
                return -1;
            }

            int front = arr[0];
            for (int i = 0; i < rear; i++) {
                arr[i] = arr[i + 1];
            }
            rear = rear - 1;
            return front;
        }

        // peek
        public static int peek() {
            if (isEmpty()) {
                System.out.println("empty queue");
                return -1;
            }
            return arr[0]; // front
        }
    }

    public static void main(String[] args) {
        Queue q = new Queue(5); // 5-arraysize
        q.add(1);
        q.add(2);
        q.add(3);
        while (!q.isEmpty()) {
            System.out.println(q.peek()); // FIFO
            q.remove();
        }
    }
}

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------







