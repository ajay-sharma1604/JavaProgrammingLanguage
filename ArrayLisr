import java.util.ArrayList;

public class Java {
    public static void main(String[] args) {

        // defining ArrayList
        ArrayList<Integer> list = new ArrayList<>();

        // * OPERATIONS IN ARRAYLIST */

        // Add element -o(1)
        list.add(1);
        list.add(2);
        list.add(3);
        list.add(4);
        list.add(0, 14);
        list.add(5, 14);
        System.out.println("add" + list);

        // Get element- o(1)
        int element = list.get(2);
        System.out.println("get" + " " + element);

        // Delete element
        list.remove(2);
        System.out.println("delete" + list);

        // Set element
        list.set(0, 5);
        System.out.println("Set" + list);

        // Contains element
        System.out.println(list.contains(12));

        //Size
        System.out.println(list.size()); 

        
        // print the ArrayList
        for (int i = 0; i < list.size(); i++) {
            System.out.print(list.get(i) + " ");
        }
        System.out.println();

        //Print Reverse of ArrayList

         for (int i = list.size() - 1; i >= 0; i--) {
            System.out.print(list.get(i) + " ");
        }
        System.out.println();

        //Find Maximum of ArrayList

        int max = Integer.MIN_VALUE;
        for (int i = 0; i < list.size(); i++) {
            if (list.get(i) > max) {
                max = list.get(i);
            }
        }
        System.out.println(max);
   }
}

------------------------------------------------------------------------------------------------------------------------------------------------------

       //Swap

import java.util.ArrayList;

public class Java {

    public static void swap(ArrayList<Integer> list, int index1, int index2) {

        // swapping
        int temp = list.get(index1);
        list.set(index1, list.get(index2));
        list.set(index2, temp);

    }

    public static void main(String[] args) {

        ArrayList<Integer> list = new ArrayList<>();

        list.add(1);
        list.add(2);
        list.add(3);
        list.add(4);
        list.add(5);

        int index1 = 1;// 2
        int index2 = 3;// 4

        System.out.println("Original" + ":" + list);
        swap(list, index1, index2);
        System.out.println("Swapped" + list);

    }
}

------------------------------------------------------------------------------------------------------------------------------------------------------

    //Sorting Array List

import java.util.ArrayList;
import java.util.Collections;

public class Java {

    public static void main(String[] args) {

        ArrayList<Integer> list = new ArrayList<>();

        list.add(5);
        list.add(4);
        list.add(3);
        list.add(2);
        list.add(1);

        System.out.println("Original : " + list);

        // Sorting - bydefault ascending order
        Collections.sort(list);
        System.out.println("Sorted list : " + list);

        // Descenind order sort
        Collections.sort(list, Collections.reverseOrder());
        System.out.println("Descending Sorted list : " + list);

    }
}


------------------------------------------------------------------------------------------------------------------------------------------------------

//MultiDimensional ArrayList

import java.util.ArrayList;

public class Java {

    public static void main(String[] args) {

        // Multidimensional ArrayList
        ArrayList<ArrayList<Integer>> mainList = new ArrayList<>();

        // creating list1 and adding in mainList
        ArrayList<Integer> list1 = new ArrayList<>();
        list1.add(1);
        list1.add(2);
        list1.add(3);
        list1.add(4);
        list1.add(5);
        mainList.add(list1);

        // creating list2 and adding in mainlist
        ArrayList<Integer> list2 = new ArrayList<>();
        list2.add(2);
        list2.add(4);
        list2.add(6);
        list2.add(8);
        list2.add(10);
        mainList.add(list2);

        // creating list2 and adding in mainList
        ArrayList<Integer> list3 = new ArrayList<>();
        list3.add(3);
        list3.add(6);
        list3.add(9);
        list3.add(12);
        list3.add(15);
        mainList.add(list3);

        // printing mainList
        for (int i = 0; i < mainList.size(); i++) {
            ArrayList<Integer> currList = mainList.get(i);
            for (int j = 0; j < currList.size(); j++) {
                System.out.print(currList.get(j) + " ");
            }
            System.out.println();
        }

        System.out.println(mainList);
    }
}
                                             OR


import java.util.ArrayList;

public class Java {

    public static void main(String[] args) {

        // Multidimensional ArrayList
        ArrayList<ArrayList<Integer>> mainList = new ArrayList<>();

        // creating list1,2,3
        ArrayList<Integer> list1 = new ArrayList<>();
        ArrayList<Integer> list2 = new ArrayList<>();
        ArrayList<Integer> list3 = new ArrayList<>();

        // Adding elements in list
        for (int i = 1; i <= 5; i++) {
            list1.add(i * 1);// 1 2 3 4 5
            list2.add(i * 2);// 2 4 6 8 10
            list3.add(i * 3);// 3 6 9 12 15
        }

        // Adding all list in mainList
        mainList.add(list1);
        mainList.add(list2);
        mainList.add(list3);

        // printing all list
        for (int i = 0; i < mainList.size(); i++) {
            ArrayList<Integer> currList = mainList.get(i);
            for (int j = 0; j < currList.size(); j++) {
                System.out.print(currList.get(j) + " ");
            }
            System.out.println();
        }

        // printing mainlist
        System.out.println(mainList);
    }
}

------------------------------------------------------------------------------------------------------------------------------------------------------

//Container with most water
                                        //BRUTE FORCE =O(nsquare)

import java.util.ArrayList;

public class Java {

    public static int storeWater(ArrayList<Integer> height) {
        int maxWater = 0; // asssuming single line

        // brute force
        for (int i = 0; i < height.size(); i++) {
            for (int j = i + 1; j < height.size(); j++) {
                int ht = Math.min(height.get(i), height.get(j));
                int width = j - i;
                int currWater = ht * width;
                maxWater = Math.max(maxWater, currWater);
            }
        }
        return maxWater;
    }

    public static void main(String[] args) {

        ArrayList<Integer> height = new ArrayList<>();
        // 1,8,6,2,5,4,8,3,7
        height.add(1);
        height.add(8);
        height.add(6);
        height.add(2);
        height.add(5);
        height.add(4);
        height.add(8);
        height.add(3);
        height.add(7);

        System.out.println(storeWater(height));

    }
}

                                            //Optimised solution - o(n)

import java.util.ArrayList;

public class Java {

    public static int storeWater(ArrayList<Integer> height) {
        int maxWater = 0; // asssuming single line

        // 2 pointer approach -o(n)
        int lp = 0;
        int rp = height.size() - 1;

        while (lp < rp) {

            // calculate water area
            int ht = Math.min(height.get(lp), height.get(rp));
            int width = rp - lp;
            int currWater = ht * width;
            maxWater = Math.max(maxWater, currWater);

            // update pointer- small one gets updated
            if (height.get(lp) < height.get(rp)) {
                lp++;
            } else {
                rp--;
            }
        }

        return maxWater;
    }

    public static void main(String[] args) {

        ArrayList<Integer> height = new ArrayList<>();
        // 1,8,6,2,5,4,8,3,7
        height.add(1);
        height.add(8);
        height.add(6);
        height.add(2);
        height.add(5);
        height.add(4);
        height.add(8);
        height.add(3);
        height.add(7);

        System.out.println(storeWater(height));

    }
}


------------------------------------------------------------------------------------------------------------------------------------------------------

//Pair Sum

import java.util.ArrayList;

public class Java {

    public static boolean pairSum(ArrayList<Integer> list, int target) {
        // Brute Force
        for (int i = 0; i < list.size(); i++) {
            for (int j = i + 1; j < list.size(); j++) {
                if (list.get(i) + list.get(j) == target) {
                    return true; // such pair exists
                }
            }
        }
        return false;
    }

    public static void main(String[] args) {

        ArrayList<Integer> list = new ArrayList<>();

        list.add(1);
        list.add(2);
        list.add(3);
        list.add(4);
        list.add(5);
        list.add(6);
        int target = 50;

        System.out.println(pairSum(list, target));

    }
}


