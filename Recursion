---------------------Print numbers in decreasing order---------------------


public class Basics{

    public static void printDecreasing(int n){
        if(n==1){
            System.out.println(n);
            return;
        }
        System.out.print(n + " ");
        printDecreasing(n-1);
    }

    public static void main(String[] args) {
        int n=10;
        printDecreasing(n);
    }
}


------------------------Print numbers in increasing order-----------------------

public class Basics{

    public static void printIncreasing(int n){
    
    if(n==1){//base case
        System.out.print(n+ " ");
        return;
    }
       printIncreasing(n-1);
       System.out.print(n+ " ");
    }

    public static void main(String[] args) {
        int n =10;
        printIncreasing(n);
    }
}

-----------------------------another method 

public class Basics{

    public static void printIncreasing(int n){
        if(n==10){
            System.out.println(n);
            return;
        }
        System.out.print(n+" ");
        printIncreasing(n+1);
    }

    public static void main(String[] args) {
        int n =1;
        printIncreasing(n);
    }
}


-------------------- Find Factorial of a number

public class Basics{

    public static int printFact(int n){

        if(n==0){//0!=1
            return 1 ;
        }
        int factnminusone = printFact(n-1);
        int factn= (n*factnminusone);
        return factn;
    }
    public static void main(String[] args) {
        int n=4;
        System.out.println(printFact(n));
    }



-------------------------------------------Print sum of first n natural numbers

public class Basics{

    public static int printFirstN(int n){
        if(n==1){
            return 1;
        }
        int value=printFirstN(n-1);
        int sum =(n + value);
        return sum;
    }
    public static void main(String[] args) {
        int n=10;
        System.out.println(printFirstN(n));
    }
}


-------------------------------- Print Nth Fibonacci Number

public class Basics{

    public static int fib(int n){

        if(n==0 || n==1){
            return n;
        }
        int fibnm1 =fib(n-1);
        int fibnm2 =fib(n-2);
        int fibn =fibnm1 +fibnm2;
        return fibn;
    }
    public static void main(String[] args) {
        int n=6;
        System.out.println(fib(n));
    }
}

--------------------------------------  Check if the array is sorted or not

public class Basics{

    public static boolean sortedArray(int arr[] ,int i){
        if(i ==arr.length-1){//basecase
            return true;
        }
        if(arr[i] > arr[i+1]){
            return false;
        }
        return sortedArray(arr, i+1);
    }
    public static void main(String[] args) {
        int arr[] ={1,2,3,4,5};
        int i=0;
        System.out.println(sortedArray(arr, i));

    }
}


--------------------------------- Find the first occurence of an element in an array

public class Basics{

    public static int firstOcc(int arr[], int num, int i){

        if(i==arr.length){//basecase 
            return -1;
        }
        if(arr[i]==num){
            return i;
        }
       
        return firstOcc(arr, num, i+1);
    }
    public static void main(String[] args) {
        int arr[]={1,2,3,4,4,5,6,7,6,9,8};
        System.out.println(firstOcc(arr, 12, 0));
    }
}


----------------------------------Find the last occurence of an elemen in an array

public class Basics{

    public static int lastOcc(int arr[], int key, int i){
        //Basecase
        if(i==0){
            return -1;
        }
        if(arr[i-1]==key){
            return i-1;
        }
        return lastOcc(arr, key, i-1);
    }
    public static void main(String[] args) {
        int arr[]={8,5,2,3,6,9,9,6,5};
        System.out.println(lastOcc(arr,5,arr.length));
    }
}
