1) Check number is even or odd

import java.util.*;
public class Basics{

    public static void oddOrEven(int n){
        int bitMask =1;
        if((n & bitMask) == 0){
            //evennumber
            System.out.println("Even number");
        }
        else{
            System.out.println("odd numner");
        }
    }
    public static void main(String[] args) {
        oddOrEven(3);
        oddOrEven(11);
        oddOrEven(14);
    }
}


2) get ith bit

import java.util.*;
public class Basics{

    public static void getIthBit(int n ,int i){
        int bitmask= 1<<i;
        if((n & bitmask) == 0){
            System.out.println("ith bit is 0");
        }
        else{
            System.out.println("ith bit is 1");
        }
    }
    public static void main(String[] args) {
        getIthBit(8,1);
    }
}

3) set ith bit

import java.util.*;
public class Basics{

    public static void setIthBit(int n ,int i){
        int bitmask= 1<<i;;
        System.out.println((n|1<<i));
    }
    public static void main(String[] args) {
        setIthBit(10,2);
    }
}


4) clear ith bit

import java.util.*;
public class Basics{

    public static void clearIthBit(int n ,int i){
        int bitMask =~(1<<i);
        System.out.println((n & bitMask));
    }
    public static void main(String[] args) {
        clearIthBit(10,1);
    }
}

5) Update ith Bit

import java.util.*;
public class Basics{

    public static int setIthBit(int n, int i){
        //makes the ith bit =1
        int bitmask =1<<i;
       return (n | bitmask);
    }

    public static int clearIthBit(int n ,int i){
        //makes the ith bit =0
        int bitMask =~(1<<i);
       return(n & bitMask);
    }

    public static int updateIthBit(int n, int i, int newBit){
        if(newBit == 0){
            return clearIthBit(n, i);
        }
        else{
            return setIthBit(n, i);
        }

    }
    public static void main(String[] args) {
        Scanner sc =new Scanner(System.in);
        int n= sc.nextInt();
        int i=sc.nextInt();
        int newBit = 1; //1
        System.out.println(updateIthBit(n, i, newBit));
    }
}


******************* Another approach

import java.util.*;
public class Basics{


    public static int clearIthBit(int n ,int i){
        //makes the ith bit =0
        int bitMask =~(1<<i);
       return(n & bitMask);
    }

    public static int updateIthBit(int n, int i, int newBit){
       n =clearIthBit(n, i);
       int BitMask =newBit<<i;
       return n | BitMask;

    }
    public static void main(String[] args) {
        Scanner sc =new Scanner(System.in);
        int n= sc.nextInt();
        int i=sc.nextInt();
        int newBit = 1; //1
        System.out.println(updateIthBit(n, i, newBit));
    }
}
