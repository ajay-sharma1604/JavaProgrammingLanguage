****Creation of an Array****

import java.util.*;
public class Basics{
    public static void main(String args[]){
        int marks[] = new int[50];                 //by default 0 is stored in all 50 location
        int numbers[] = {1,2,3};                   //directly giving values,java will automatically detect the size
        int morenumbers[] = {4,5,6};
        String fruits[] = {"apple","mango","orange"};   //String type array of size 3, detected autoatically by java
       
    }
}


***** Input,Output,Update Array ****************

import java.util.*;
public class Basics{
    public static void main(String args[]){
        //Taking input in Array

        Scanner sc =new Scanner(System.in);
        int marks[] = new int[100];
        System.out.println("Enter marks of Physics");
        marks[0] = sc.nextInt();
        System.out.println("Enter marks of Chemistry");
        marks[1] = sc.nextInt();
        System.out.println("Enter marks of Maths");
        marks[2] = sc.nextInt();

        //Output in Array

        System.out.println("Marks of Physics:" + marks[0]);
        System.out.println("Marks of Chemistry:" + marks[1]);
        System.out.println("Marks of Maths:" + marks[2] );

        //Updating Maths subject marks

         marks[2]=100; 
         System.out.println("Marks of Maths:" + marks[2]);

        //another way of updating

        marks[2] = marks[2] + 1;
        System.out.println("Marks of Maths +1:" + marks[2]);

        marks[2] = marks[2] -1;
        System.out.println("Marks of Maths -1:" + marks[2]);

        marks[2] = marks[2] * 1;
        System.out.println("Markd of Maths *1:" + marks[2]);

        marks[2] = marks[2] / 1;
        System.out.println("Marks of Maths /1:" + marks[2]);

    }
}


***** Calculating Percentage *****

import java.util.*;
public class Basics{
    public static void main(String args[]){
        //Taking input in Array
        Scanner sc =new Scanner(System.in);
        int marks[] = new int[100];
        System.out.println("Enter marks of Physics");
        marks[0] = sc.nextInt();
        System.out.println("Enter marks of Chemistry");
        marks[1] = sc.nextInt();
        System.out.println("Enter marks of Maths");
        marks[2] = sc.nextInt();

        //Output in Array
        System.out.println("Marks of Physics:" + marks[0]);
        System.out.println("Marks of Chemistry:" + marks[1]);
        System.out.println("Marks of Maths:" + marks[2] );


//Calculating percentage

int percentage = (marks[0] + marks[1] + marks[2]) / 3;
System.out.println("Percentage is:" + percentage + "%");
    }
}


********* To Calculate length of array *********

import java.util.*;
public class Basics{
    public static void main(String args[]){
       
        Scanner sc =new Scanner(System.in);
        int marks[] = new int[100];
        System.out.println("Length of Array:"+ marks.length); //output is 100

        //length will change if you change the size of array eg: if marks[49] then length=49

        
    }
}

**************** Updating value in one function and printing in calling/main function **********

public class Basics{

    public static void update(int update[] , int nonchangeable){
        nonchangeable =10;
        for(int i=0;i<update.length;i++){
            update[i] = update[i] + 1;
        }
    }
    public static void main(String args[]){
        int marks[] = {99,98,78};
        int nonchangeable = 5;
        update(marks,nonchangeable);
        System.out.println(nonchangeable);  //this is not call by reference so value will not update to (10) it will remain (5)

       //printing array(instead of writing one by one we are simply using the loop

        for(int i=0;i<marks.length;i++){
            System.out.print(marks[i] + " ");
        }
        System.out.println();
    }
}


************** (self)  Taking input from user and then changing in one function and updating in main function *************

import java.util.*;
public class Basics{

    public static void update(int update[]){
        for(int i=0;i<update.length;i++){
            update[i] = update[i] + 1;
        }
    }
    public static void main(String args[]){
        Scanner sc =new Scanner(System.in);
        int marks[] = new int[3];
        System.out.println("Please enter values");
        for(int i=0;i<marks.length;i++){
            marks[i] = sc.nextInt();
        }
        update(marks);

        for(int i=0;i<marks.length;i++){
            System.out.print(marks[i] + " ");
        }
    
    }
}

___________________Asking array length from user itself in above program_____________________________

import java.util.*;
public class Basics{

    public static void update(int update[]){
        for(int i=0;i<update.length;i++){
            update[i] = update[i] + 1;
        }
    }
    public static void main(String args[]){
        Scanner sc =new Scanner(System.in);
        int marks[] = new int[sc.nextInt()];           //asking the length of array from user itself
        System.out.println("Please enter values");
        for(int i=0;i<marks.length;i++){
            marks[i] = sc.nextInt();
        }
        update(marks);

        for(int i=0;i<marks.length;i++){
            System.out.print(marks[i] + " ");
        }


*****************************  Linear Search in Array ***********************

public class Basics{

    public static int linearSearch(int numbers[], int key){
        for(int i=0;i<numbers.length;i++){
            if(numbers[i]==key){
                return i;
            }
        }
        return -1; //it tells that key does not exist
    }
    public static void main(String args[]){
        int numbers[] = {1,2,4,7,10,34,12,8};
        int key =20;

        int index =linearSearch(numbers, key);
        if(index==-1) {
            System.out.println("Not found");
        }
        else{
            System.out.println("Key is at index:" + index);
        }
    }
}
    
    }
}

*************************** Taking inputs from user In linear Search in array *****************


import java.util.*;
public class Basics{

    public static int linearSearch(int values[], int keq){
        for(int i=0;i<values.length;i++){
            if(values[i]==keq){
                return i;
            }
        }
        return -1;
    }

    public static void main(String args[]){
        Scanner sc =new Scanner(System.in);
        System.out.println("Enter size of array");
        int numbers[] = new int[sc.nextInt()];
        System.out.println("Please enter values of array");
        for(int i=0; i<numbers.length;i++){
            numbers[i]=sc.nextInt();
        }
        System.out.println("Please enter key value");
        int key =sc.nextInt();
        int result = linearSearch(numbers,key);
        if(result==-1){
            System.out.println("KEY NOT FOUND");
        }
        else{
            System.out.println("Key found at index:" + result);
        }
    }
}

****************************** Find largest number in array **************************************

import java.util.*;
public class Basics{
    public static int getLargest(int numbers[]){
        int largest = Integer.MIN_VALUE;
        for(int i=0;i<numbers.length;i++){
            if(largest<numbers[i]){
                largest = numbers[i];
            }
        }
        return largest;

    }
    public static void main(String args[]){
        int numbers[]= {100,2,6,3,8};
        int result = getLargest(numbers);
        System.out.println("largest number is:" + result );

    }
}


or

import java.util.*;
public class Basics{
    public static int getLargest(int numbers[]){
        int largest = numbers[0];
        for(int i=0;i<numbers.length;i++){
            if(largest<numbers[i]){
                largest = numbers[i];
            }
        }
        return largest;

    }
    public static void main(String args[]){
        int numbers[]= {100,2,6,3,8};
        int result = getLargest(numbers);
        System.out.println("largest number is:" + result );

    }
}




****************************** Find Smallest number in array ***********************************

import java.util.*;
public class Basics{

    public static int getSmallest(int numbers[]){
        int Smallest = Integer.MAX_VALUE;
        for(int i=0;i<numbers.length;i++){
        if(Smallest>numbers[i]){
            Smallest = numbers[i];
        }
        }
        return Smallest;
    }
    public static void main(String args[]){
        int numbers[]={8,9,5,4,1,3,2};
        int result = getSmallest(numbers);
        System.out.println("Smallest no is:" + result);
    }
}

********************************* Binary Search in Array ****************************************

public class Basics{

    public static int binarySearch(int numbers[], int key){
        int start=0;
        int end = numbers.length-1;
       
        while(start<=end){
             int mid =(start+end)/2;
            if(numbers[mid]==key){
                return mid; //key founf
            }
            if(numbers[mid]>key){
                end=mid-1; //left
            }
            else{//mid<key  //right
             start=mid+1;
            }
        }
        return -1;
    }
    public static void main(String args[]){
        int numbers[]= {2,4,6,8,10,12,14};
        int key =2;
        int result = binarySearch(numbers,key);
        System.out.println("index for key is:" + result);
    }
}


************************************  Taking input from user in above program ***************************************

import java.util.*;
public class Basics{

    public static int binarySearch(int numbers[],int key){
        int start=0 , end =numbers.length;
        while(start<=end){
            int mid = (start+end)/2;
            //when key found at mid
            if(numbers[mid]==key){
                return mid;
            }
            //when key is greater than mid
            if(numbers[mid]<key){
                start=mid+1; //right side
            }
            //when key is smaller than mid
            else{
                end=mid-1;
            }
        }
        return -1;
    }
    public static void main(String args[]){
        Scanner sc =new Scanner(System.in);
        System.out.println("Please enter size of array");
        int numbers[]= new int[sc.nextInt()];
        System.out.println("Please enter elements of array");
        for(int i=0;i<numbers.length;i++){
            numbers[i]=sc.nextInt();
        }
        System.out.println("Please enter key");
        int key= sc.nextInt();
        int result= binarySearch(numbers,key);
        System.out.println("key is at index:" + result);
    }
}


******************************** Reverse an array ****************************************

public class Basics{

    public static void reverseArray(int numbers[]){
        int first=0;
        int last= numbers.length-1;
        while(first<last){
            int temp = numbers[last];
            numbers[last]= numbers[first];
            numbers[first]= temp;

            first++;
            last--;
        }

    }
    public static void main(String args[]){
        int numbers[]= {2,4,6,8,10};
        reverseArray(numbers);
        for(int i=0;i<numbers.length;i++){
            System.out.print(numbers[i] + " ");
        }
        System.out.println();
    }
}


***************************** Print pairs in array *********************************

public class Basics{

    public static void printPairs(int numbers[]) {
        int tp=0;
        for(int i=0;i<numbers.length;i++){
            int curr = numbers[i]; //2,4,6,8,10
            for(int j=i+1;j<numbers.length;j++){
                System.out.print("(" + curr + "," + numbers[j] + ")");
                tp++;
            }
            System.out.println();
        }
        System.out.println("Total pairs =" + tp);
    }
    public static void main(String args[]){
        int numbers[]={2,4,6,8,10};
        printPairs(numbers);
    }

}


****************************** Print subarrays ***************************

public class Basics{

    public static void printSubarrays(int numbers[]){
        int ts=0;
        for(int i=0;i<numbers.length;i++){
            int start=i;
            for(int j=i;j<numbers.length;j++){
                int end=j;
                for(int k=start;k<=end;k++){//print
                    System.out.print(numbers[k] + " ");//subarray
                }
                ts++;
                System.out.println();
            }
            System.out.println();
        }
        System.out.println("total subarrays = " + ts);
    }
    public static void main(String[] args) {
        int numbers[]={2,4,6,8,10};
        printSubarrays(numbers);
    }
}


_________________________________ PRINT SUM OF EACH SUBARRAY ________________________________

public class Basics{

    public static void printsubArrays(int num[]){
        int temp =0;
        for(int i=0;i<num.length;i++){
            int start =i;
            for(int j=i;j<num.length;j++){
                int end =j;
                temp =0;
                for(int k=start;k<=end;k++){
                  temp += num[k];
                    
                }
                System.out.println(temp);
            
            }
            System.out.println();
        }
      
    }
    public static void main(String args[]){
        int num[]={2,4,6,8,10};
        printsubArrays(num);

    }
}


******************************************* Max Subarray Sum -o(n cube)******************************************************

public class Basics{

    public static void maxsubArrays(int num[]){
        int currsum =0;
        int maxSum =Integer.MIN_VALUE;
        
        for(int i=0;i<num.length;i++){
            int start =i;
            for(int j=i;j<num.length;j++){
                int end =j;
                currsum=0;
                for(int k=start;k<=end;k++){
                  currsum += num[k];
                }
                System.out.println(currsum);
                if(maxSum<currsum){
                    maxSum=currsum;
                }
            }
            System.out.println();
        }
        System.out.println("max sum = " + maxSum);
      
    }
    public static void main(String args[]){
        int num[]={1,-2,6,-1,3};
        maxsubArrays(num);

    }
}

______________________ Little modification in above from my side ______________________
public class Basics{

     public static void main(String args[]){
        int num[]= {1,-2,6,-1,3};
        printsubArrays(num);
    }

    public static void printsubArrays(int num[]){
        int sum=0;
        int maxArray=Integer.MIN_VALUE;
        for(int i=0;i<num.length;i++){
            int start =i;

            for(int j=i;j<num.length;j++){
                int end =j;
                sum=0;

                for(int k=start;k<=end;k++){
                    sum=sum+num[k];
                    System.out.print(num[k] + " ");
                }
                System.out.println("=" +" " + sum);
                if(maxArray<sum){
                    maxArray=sum;
                }
            }
            System.out.println();
        }
        System.out.println("The Maximum of all is: " + maxArray);
    }
}

************************************ Max subArray Sum (Prefix sum ) -o(nsquare)*****************************

 public class Basics{
    public static void main(String args[]){
        int arr[]={1,-2,6,-1,3};
        maxsubArray(arr);
    }

    public static void maxsubArray(int arr[]){
        int sum=0;
        int max=Integer.MIN_VALUE;

        //creating prefix array
        int prefix[]= new int[arr.length]; //declared and created the prefix array
       
        //calculating prefix array

        prefix[0]= arr[0]; //sum at 0 index in prefix array = the value of 0 index at actual index only
        for(int p=1;p<prefix.length;p++){
                prefix[p]=prefix[p-1] + arr[p];
        }
    
        
        for(int i=0;i<arr.length;i++){
            int start=i;

            for(int j=i;j<arr.length;j++){
                int end=j;
                sum= start == 0 ? prefix[end] : prefix[end] -prefix[start-1]; //new line
                if(max<sum){
                    max=sum;
                }
            }
            
        }
          System.out.println("maximum of all is:" + max);
    }
}


***************************** Max Subarray sum(Kadanes's Algorithm)- 0(n) ***********************
public class Basics{
    public static void main(String args[]){
        int arr[]={-2,-3,4,-1,-2,1,5,-3};
        kadanes(arr);
    }

        public static void kadanes(int arr[]){
            int cs=0;
            int ms=Integer.MIN_VALUE;
            for(int i=0;i<arr.length;i++){
                cs=cs+arr[i];
                if(cs<0){
                    cs=0;
                }
                ms=Math.max(cs,ms);
            }
            System.out.println("max subarray sum is:" + ms);
        }
    
}

