**************************Intoduction**************************

1)Print hello world by making a function (void return type)

public class Basics{
  public static void printHelloWorld(){
    System.out.println("Hello World");
  }
  public static void main(String args[]){
      printHelloWorld(); //Function call
  }
}                           output-Hello World

--------------------------------------------------------------------------------------------------
2)Print Hello World 3 times  (void return type)

public class Basics{
  public static void printHelloWorld(){
    System.out.println("Hello World");
    System.out.println("Hello World");
    System.out.println("Hello World");
    return; //not needed in case of void return type
  }
  public static void main(String args[]){
      printHelloWorld();
  }
}                      
output -
Hello World 
Hello World 
Hello World 
------------------------------------------------------------------------------------------------
3)print Hellow world 8 times (int return type)

public class Basics{
  public static int printHelloWorld(){
    System.out.println("Hello World");
    System.out.println("Hello World");
    System.out.println("Hello World");
     System.out.println("Hello World");
      System.out.println("Hello World");
       System.out.println("Hello World");
        System.out.println("Hello World");
         System.out.println("Hello World");
    return 8;
  }
  public static void main(String args[]){
      printHelloWorld();
  }
}                           

Output-
Hello World
Hello World
Hello World
Hello World
Hello World
Hello World
Hello World
Hello World


                               -----(( to print return value))----
public class Basics{
  public static int printHelloWorld(){
    System.out.println("Hello World");
    System.out.println("Hello World");
    System.out.println("Hello World");
     System.out.println("Hello World");
      System.out.println("Hello World");
       System.out.println("Hello World");
        System.out.println("Hello World");
         System.out.println("Hello World");
    return 8;                        //You can return anything that you want- if function is doing some work then it must return a value//
  }
  public static void main(String args[]){
      
      System.out.println(printHelloWorld());
  }
}  

Output-
Hello World
Hello World
Hello World
Hello World
Hello World
Hello World
Hello World
Hello World
8  

********************************************** Syntax with parameters *****************************************************

tip:
instead of using print statement in new function, prefer return i.e function should work by returning a value. But in case of printing multiple times and also to print some text with output we got no other option
we then have to use print statement only becuase return only give output 1 time only not multiple times and give output according to data type only so no text will be printed


1) Calculate sum of two numbers using parameters

import java.util.*;
public class Basics{

  public static int CalculateSum(int num1,int num2){
        int sum = (num1 +num2);
        return sum;
  }
  public static void main(String args[]){
    Scanner sc =new Scanner(System.in);
    System.out.println("Enter 1st  number");
    int a=sc.nextInt();
     System.out.println("Enter 2nd  number");
    int b=sc.nextInt();
    int sum = CalculateSum(a,b);
    System.out.println("Sum is:"+ sum);
  }
}

2)Calculate product of two numbers using parameters

import java.util.*;
public class Basics{

  public static int Calculateproduct(int num1,int num2){
      int product = (num1*num2);
      return product;
  }
  public static void main(String args[]){
    Scanner sc= new Scanner(System.in);
    System.out.println("enter 1st number");
    int a =sc.nextInt();
    System.out.println("enter 2nd number");
    int b=sc.nextInt();
    int product= Calculateproduct(a,b);
    System.out.println("Product is:" + product);

  }
}

3)  Calculate sum,addition,multiplication,division-taking input from using by using function with parameter

import java.util.*;
public class Basics{

  public static int Calculatesum(int num1,int num2){
    int sum= (num1+num2);
    return sum;
  }
  public static int Calculateproduct(int num1,int num2){
    int product= (num1*num2);
    return product;
  }
  public static int Calculatesubtract(int num1,int num2){
    int subtract= (num1-num2);
    return subtract;
  }
  public static int Calculatedivision(int num1,int num2){
    int divide= (num1/num2);
    return divide;
  }
  public static void main(String args[]){
    Scanner sc= new Scanner (System.in);
    System.out.println("enter 1 for add, 2 for product, 3 for subtract,4 for divide");
    int choice= sc.nextInt();
  
    switch(choice){
      case 1:
     System.out.println("enter 1st number");
     int a=sc.nextInt();
    System.out.println("enter 2nd number");
    int b=sc.nextInt();
    int sum =Calculatesum(a,b);
     System.out.println("Sum is:"+sum);
    break;
    case 2:
     System.out.println("enter 1st number");
     int c=sc.nextInt();
    System.out.println("enter 2nd number");
    int d=sc.nextInt();
    int product =Calculateproduct(c,d);
     System.out.println("product is:"+product);
     break;
   
     case 3:

     System.out.println("enter 1st number");
     int e=sc.nextInt();
    System.out.println("enter 2nd number");
    int f=sc.nextInt();
    int subtract =Calculatesubtract(e,f);
     System.out.println("subtract is:"+subtract);
     break;
   
     case 4:
     System.out.println("enter 1st number");
     int g=sc.nextInt();
    System.out.println("enter 2nd number");
    int h=sc.nextInt();
    int divide =Calculatedivision(g,h);
     System.out.println("divide is:"+divide);
     break;

     default:
     System.out.println("enter valid choice");
  }
}
}                                        or

 import java.util.*;
public class Basics{

  public static int Calculatesum(int num1,int num2){
    int sum= (num1+num2);
    return sum;
  }
  public static int Calculateproduct(int num1,int num2){
    int product= (num1*num2);
    return product;
  }
  public static int Calculatesubtract(int num1,int num2){
    int subtract= (num1-num2);
    return subtract;
  }
  public static int Calculatedivision(int num1,int num2){
    int divide= (num1/num2);
    return divide;
  }
  public static void main(String args[]){
        Scanner sc= new Scanner (System.in);
        System.out.println("enter 1st number");
        int a=sc.nextInt();
        System.out.println("enter 2nd number");
        int b=sc.nextInt();
        System.out.println("enter 1 for add, 2 for product, 3 for subtract,4 for divide");
        int choice= sc.nextInt();
  
    switch(choice){
      case 1:
          int sum =Calculatesum(a,b);
          System.out.println("Sum is:"+sum);
          break;

      case 2:
          int product =Calculateproduct(a,b);
          System.out.println("product is:"+product);
          break;
   
      case 3:
          int subtract =Calculatesubtract(a,b);
          System.out.println("subtract is:"+subtract);
          break;
   
     case 4:
         int divide =Calculatedivision(a,b);
         System.out.println("divide is:"+divide);
         break;

     default:
         System.out.println("enter valid choice");
  }
}
}

 ************************************************  Find Factorial *****************************************************

import java.util.*;
public class Basics{

  public static int Calculatefactorial(int a){
    
        int fact=1;
         for(int i=1;i<=a;i++){
          fact=fact*i;
        }
        return fact;

  }
    public static void main(String args[]){
        Scanner sc=new Scanner(System.in);
        System.out.println("Enter number");
        int n=sc.nextInt();
        int result=Calculatefactorial(n);
        System.out.println("Factorial is:" + result);
        }
      
    }


 *******************************************  Find Binomial Coefficient *********************************************************

import java.util.*;
public class Basics{

  public static  int calculatebc(int a,int b){
      int fact=1;
      for(int i=1; i<=a; i++){
        fact=fact*i;
    
      }
      int facts=1;
      for(int j=1; j<=b; j++){
        facts=facts*j;
      
      }
      int factsss=1;
      for(int k=1; k<=(a-b); k++){
        factsss=factsss*k;
        
      }

      int calculate= (fact)/(factsss*facts);
      return calculate;
  }
  public static void main(String args[]){
    Scanner sc= new Scanner(System.in);
    System.out.println("enter n");
    int n=sc.nextInt();
    System.out.println("enter r");
    int r=sc.nextInt();
    if(n<r){
      System.out.println("N must be greater than r");
      return;
    }
    int result =calculatebc(n,r);

    System.out.println("Binomial Coefficient:" + result);
  }
}
  ----------------------  E A S Y WAY  ---------------------//USING HELPER FUNCTION

import java.util.*;
public class Basics{

  public static int factorial(int n){
    int f=1;
    for(int i=1;i<=n;i++){
      f=f*i;
    }
    return f;  //factorial of n
  }

  public static int binCoeff(int n, int r){
        int fact_n =factorial(n);
        int fact_r =factorial(r);
        int fact_nmr=factorial(n-r);
        int binomialcoeff = fact_n/(fact_r*fact_nmr);
        return binomialcoeff;
  }

  
  public static void main(String args[]){
      Scanner sc=new Scanner(System.in);
      System.out.println("Enter n");
      int n=sc.nextInt();
      System.out.println("Enter r");
      int r=sc.nextInt();
      if(n<r){
        System.out.println("N must be gretaer than r");
        return;
      }
      System.out.println("Binomial coefficient is:" + binCoeff(n, r));
  
}
}

**************************************** Function overloading with no of parameters *****************************************

import java.util.*;
public class Basics{

  //function to calculate sum of two numbers
  public static int sum(int a,int b){
        return a+b; //sum directly return,we dont need to store it on variable
  }

  //function to calculate sum of three numbers
  public static int sum(int a, int b, int c){
      return a+b+c;
  }
  public static void main(String args[]){
      Scanner sc =new Scanner(System.in);
      int a =sc.nextInt();
      int b =sc.nextInt();
      System.out.println(sum(a, b));                    //from user
      System.out.println(sum(5, 6, 7));           //directly giving values;
      
  }
}


********************************************* Function overloading with data types of parameters ********************************

import java.util.*;
public class Basics{

  //function to calculate int multiply
  public static int multiply(int a,int b){
     return a*b;
  }

  //function to calculate float multiply
  public static float multiply(float a, float b){
    return a*b;
  }
  public static void main(String args[]){
    Scanner sc = new Scanner(System.in);
    System.out.println("Enter number 1");
    int n=sc.nextInt();
    System.out.println("Enter number 2");
    int t= sc.nextInt();
    System.out.println("Multiplication is:" + multiply(n,t));   //by taking input from user
    System.out.println("Multiplication is:" + multiply(5.0f,1.5f));  //directly giving input
  }

}

******************************** Check if a number is prime or not (learn this,very imp for interview) ***********************************


public class Basics{

  public static boolean isprime(int n){
    boolean isprime =true;
    for(int i=2; i<n-1; i++){  
      if(n%i == 0){    //completely divide
        isprime =false;
        break;
      }
    }
    return isprime;
  }
  public static void main(String args[]){
      System.out.println(isprime(2));

  }
}

                                                       or  (very easy learn this one)

public class Basics{

  //this program is for n>=2

   public static boolean isprime(int n){

  //corner case for 2
    if(n==2){
      return true;
    }

    for(int i=2;i<=n-1;i++){
      if(n%i==0){               //completely dividing n (where n is other than 1 and n itself)
        return false;
      }
    }
    return true;


  }
  public static void main(String args[]){
    System.out.println("No is prime:" + isprime(71));
  }
}





