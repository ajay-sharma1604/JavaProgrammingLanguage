                                           Acitivity Selection //O(n)

(when activities are sorted)

import java.util.*;

public class Basics {
    public static void main(String[] args) { // O(n)
        // activity start time
        int start[] = { 1, 3, 0, 5, 8, 5 };
        // activity end time -sorted order already
        int end[] = { 2, 4, 6, 7, 9, 9 };

        // count for maxActivity
        int maxActivity = 0;

        // creating ArrayList to store Activity Index
        ArrayList<Integer> ans = new ArrayList<>();

        // 1st acitivity
        maxActivity = 1;
        ans.add(0);
        int lastEnd = end[0];

        // loop run after 1 activity for selecting activity whose start time >= prev end
        // time
        for (int i = 1; i < end.length; i++) {
            // select activity
            if (start[i] >= lastEnd) { // non overlapping activity
                maxActivity++; // increase count
                ans.add(i); // add activity in the list
                lastEnd = end[i];
            }
        }

        System.out.println("max acitivities = " + maxActivity);

        // print selected activities
        for (int i = 0; i < ans.size(); i++) {
            System.out.print("A" + ans.get(i) + " ");
        }
        System.out.println();
    }
}

                                          or(when activities are not sorted)
